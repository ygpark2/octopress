<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tech Note]]></title>
  <link href="http://ygpark2.cloudfoundry.com/atom.xml" rel="self"/>
  <link href="http://ygpark2.cloudfoundry.com/"/>
  <updated>2013-05-14T11:07:40+10:00</updated>
  <id>http://ygpark2.cloudfoundry.com/</id>
  <author>
    <name><![CDATA[Young Gyu Park]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Data migration from mysql to cassandra]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2013/01/24/data-migration-from-mysql-to-cassandra/"/>
    <updated>2013-01-24T11:32:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2013/01/24/data-migration-from-mysql-to-cassandra</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[android push notification using GCMBroadcastReceiver and customized BroadcastReciever]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2013/01/23/android-push-notification-using-gcmbroadcastreceiver-and-customized-broadcastreciever/"/>
    <updated>2013-01-23T15:40:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2013/01/23/android-push-notification-using-gcmbroadcastreceiver-and-customized-broadcastreciever</id>
    <content type="html"><![CDATA[<p>There are two ways to receive the push message.</p>

<h2>one way is to use GCMBroadcastReceiver.</h2>

<figure class='code'><figcaption><span>AndroidManifest.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;receiver</span>
</span><span class='line'>  <span class="na">android:name=</span><span class="s">&quot;com.google.android.gcm.GCMBroadcastReceiver&quot;</span>
</span><span class='line'>  <span class="na">android:permission=</span><span class="s">&quot;com.google.android.c2dm.permission.SEND&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>      <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;com.google.android.c2dm.intent.RECEIVE&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;com.google.android.c2dm.intent.REGISTRATION&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;com.otherlevels.dailydeals&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'><span class="nt">&lt;/receiver&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;service</span> <span class="na">android:name=</span><span class="s">&quot;.GCMIntentService&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see the above AndroidManifest file, they filter the events by setting the action type values between intent-filter tags.
Because GCMBroadcastReceiver is the class for GCM so you do not need other actions apart from &ldquo;com.google.android.c2dm.intent.RECEIVE&rdquo;, &ldquo;com.google.android.c2dm.intent.REGISTRATION&rdquo;</p>

<figure class='code'><figcaption><span>GCMBroadcastReceiver class</span><a href='https://code.google.com/p/gcm/source/browse/gcm-client/src/com/google/android/gcm/GCMBroadcastReceiver.java'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">GCMBroadcastReceiver</span> <span class="kd">extends</span> <span class="n">BroadcastReceiver</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">TAG</span> <span class="o">=</span> <span class="s">&quot;GCMBroadcastReceiver&quot;</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kd">final</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onReceive: &quot;</span> <span class="o">+</span> <span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">());</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">receiverClassName</span> <span class="o">=</span> <span class="n">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(!</span><span class="n">receiverClassName</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">GCMBroadcastReceiver</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">GCMRegistrar</span><span class="o">.</span><span class="na">setRetryReceiverClassName</span><span class="o">(</span><span class="n">receiverClassName</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">String</span> <span class="n">className</span> <span class="o">=</span> <span class="n">getGCMIntentServiceClassName</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="n">Log</span><span class="o">.</span><span class="na">v</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;GCM IntentService class: &quot;</span> <span class="o">+</span> <span class="n">className</span><span class="o">);</span>
</span><span class='line'>        <span class="c1">// Delegates to the application-specific intent service.</span>
</span><span class='line'>        <span class="n">GCMBaseIntentService</span><span class="o">.</span><span class="na">runIntentInService</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">intent</span><span class="o">,</span> <span class="n">className</span><span class="o">);</span>
</span><span class='line'>        <span class="n">setResult</span><span class="o">(</span><span class="n">Activity</span><span class="o">.</span><span class="na">RESULT_OK</span><span class="o">,</span> <span class="kc">null</span> <span class="cm">/* data */</span><span class="o">,</span> <span class="kc">null</span> <span class="cm">/* extra */</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>The other way is to customize the BroadcastReciever class by inheriting</h2>

<p>In this method, you first need to set the customized java class name including package name for the tag android:name.The next step is to define the broadcast intents containing an action string.</p>

<figure class='code'><figcaption><span>AndroidManifest.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;receiver</span>
</span><span class='line'>  <span class="na">android:name=</span><span class="s">&quot;com.google.android.gcm.GCMBroadcastReceiver&quot;</span>
</span><span class='line'>  <span class="na">android:permission=</span><span class="s">&quot;com.google.android.c2dm.permission.SEND&quot;</span> <span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;intent-filter&gt;</span>
</span><span class='line'>      <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;com.google.android.c2dm.intent.RECEIVE&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&quot;com.google.android.c2dm.intent.REGISTRATION&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&quot;com.otherlevels.dailydeals&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/intent-filter&gt;</span>
</span><span class='line'><span class="nt">&lt;/receiver&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The same effect we can make in java code is to use the registerReceiver() method of the Activity class</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">IntentFilter</span> <span class="n">filter</span> <span class="o">=</span> <span class="k">new</span> <span class="n">IntentFilter</span><span class="o">(</span><span class="s">&quot;com.pkg.ain.Broadcast&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">MyReceiver</span> <span class="n">receiver</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MyReceiver</span><span class="o">();</span>
</span><span class='line'><span class="n">registerReceiver</span><span class="o">(</span><span class="n">receiver</span><span class="o">,</span> <span class="n">filter</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>There is two ways to filer the action type. One is to use intent-filter tag as you can see above. The other way is to write a code to distinguish the action type on GCMBroadcastReceiver class file. You can see the example for the following code.</p>

<figure class='code'><figcaption><span>onReceive function</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onReceive</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">Intent</span> <span class="n">intent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">d</span><span class="o">(</span><span class="n">TAG</span><span class="o">,</span> <span class="s">&quot;onReceive with action:&quot;</span> <span class="o">+</span> <span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">()+</span><span class="s">&quot;!&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;com.google.android.c2dm.intent.REGISTRATION&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">handleRegistration</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">intent</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">ACTION_SMS_RECEIVED</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">ACTION_NEW_OUTGOING_SMS</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">intent</span><span class="o">.</span><span class="na">getAction</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;com.google.android.c2dm.intent.RECEIVE&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>References</h2>

<ol>
<li><a href="http://www.techotopia.com/index.php/Android_Broadcast_Intents_and_Broadcast_Receivers">http://www.techotopia.com/index.php/Android_Broadcast_Intents_and_Broadcast_Receivers</a></li>
<li><a href="http://stackoverflow.com/questions/6352281/getintent-extras-always-null">http://stackoverflow.com/questions/6352281/getintent-extras-always-null</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to configure java spring hadoop framework to run on amazon emr]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2013/01/07/how-to-configure-java-spring-hadoop-framework-to-run-on-amazon-emr/"/>
    <updated>2013-01-07T09:24:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2013/01/07/how-to-configure-java-spring-hadoop-framework-to-run-on-amazon-emr</id>
    <content type="html"><![CDATA[<p>Start emr instance</p>

<figure class='code'><figcaption><span>start emr instance command</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>elastic-mapreduce -c ./cfg/credentials.json --create --name ad-hoc-cluster --instance-group master --instance-type m1.small --instance-count 1 --instance-group core --instance-type m1.small --instance-count 2 --instance-group task --instance-type m1.small --instance-count 3 --bid-price .065 --alive
</span></code></pre></td></tr></table></div></figure>


<p>Open ssh tunneling</p>

<figure class='code'><figcaption><span>open ssh tunneling command</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>elastic-mapreduce -j <span class="nv">$JOB_ID</span> --socks
</span></code></pre></td></tr></table></div></figure>


<p>Create a project</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tip on adding several seconds to the current time in nodejs Date module]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2012/10/26/tip-on-adding-several-seconds-to-the-current-time-in-nodejs-date-module/"/>
    <updated>2012-10-26T13:06:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2012/10/26/tip-on-adding-several-seconds-to-the-current-time-in-nodejs-date-module</id>
    <content type="html"><![CDATA[

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to implement the circulating job in nodejs Daida module]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2012/10/26/how-to-implement-the-circulating-job-in-nodejs-daida-module/"/>
    <updated>2012-10-26T13:02:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2012/10/26/how-to-implement-the-circulating-job-in-nodejs-daida-module</id>
    <content type="html"><![CDATA[<p>I believe Daida is quite well made job scheduler module in nodejs.</p>

<p>Basically, Daida is providing several scheduling strategies. The very representative strategy among them is Local Strategy which I am using.currently.</p>

<p>Daida is quite flexible module to suite your variety of needs by redefining the basic prototype.
You can find the detail information about how to use in this link.</p>

<p>What I want to do is to make a chain of job list. So when one job is finished, the job know what the next job is called. Hence this is sort of linked list in terms of concept.</p>

<p>This is the task list that I defined. As you can see, at the end of the code, I redefined the nextJob value again otherwise the first task can refer to the job</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">scheduledOLSessionEndTask</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">handlerModule</span><span class="o">:</span> <span class="s2">&quot;Olsession&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">runAfter</span><span class="o">:</span> <span class="mi">3000</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">handlerFunction</span><span class="o">:</span> <span class="s2">&quot;session_end&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">nextJob</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">args</span><span class="o">:</span> <span class="p">{</span><span class="nx">delayTime</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">context</span><span class="o">:</span> <span class="nx">context</span><span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">scheduledOLSessionStartTask</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">handlerModule</span><span class="o">:</span> <span class="s2">&quot;Olsession&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">runAfter</span><span class="o">:</span> <span class="mi">2000</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">handlerFunction</span><span class="o">:</span> <span class="s2">&quot;session_start&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">nextJob</span><span class="o">:</span> <span class="nx">scheduledOLSessionEndTask</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">args</span><span class="o">:</span> <span class="p">{</span><span class="nx">delayTime</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">context</span><span class="o">:</span> <span class="nx">context</span><span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">scheduledOLSessionCreateTask</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">handlerModule</span><span class="o">:</span> <span class="s2">&quot;Olsession&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">runAfter</span><span class="o">:</span> <span class="mi">1000</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">handlerFunction</span><span class="o">:</span> <span class="s2">&quot;session_create&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">nextJob</span><span class="o">:</span> <span class="nx">scheduledOLSessionStartTask</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">args</span><span class="o">:</span> <span class="p">{</span><span class="nx">delayTime</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span> <span class="nx">queNum</span><span class="o">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nx">context</span><span class="o">:</span> <span class="nx">context</span><span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">scheduledOLSessionEndTask</span><span class="p">.</span><span class="nx">nextJob</span> <span class="o">=</span> <span class="nx">scheduledOLSessionCreateTask</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>In this code, I ensure that there is only one job in the job queue by redefining the preRunCallback
Before running the routine, I deleted the job in the queue.so that I empty the job in the queue.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">scheduler</span><span class="p">.</span><span class="nx">preRunCallback</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">job</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;=========== Job: &#39;</span> <span class="o">+</span> <span class="nx">job</span><span class="p">.</span><span class="nx">_id</span> <span class="o">+</span> <span class="s1">&#39;  checking in for preRunCallback&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">while</span> <span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">_jobqueue</span><span class="p">.</span><span class="nx">_queue</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">job</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_jobqueue</span><span class="p">.</span><span class="nx">_queue</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">_jobqueue</span><span class="p">.</span><span class="nx">_queue</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">job</span><span class="p">),</span> <span class="mi">1</span> <span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>In the postRunCallback function, I added the job again</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">scheduler</span><span class="p">.</span><span class="nx">postRunCallback</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">job</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;Job: &#39;</span> <span class="o">+</span> <span class="nx">job</span><span class="p">.</span><span class="nx">_id</span> <span class="o">+</span> <span class="s1">&#39; finished.&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="k">this</span><span class="p">.</span><span class="nx">_jobqueue</span><span class="p">.</span><span class="nx">_queue</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">job</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">job</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="s1">&#39;nextJob&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">&quot;add next job !!!!!!!!!!!!!!!!!!!!!&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="nx">schedule</span><span class="p">(</span><span class="nx">job</span><span class="p">.</span><span class="nx">nextJob</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">&quot;add same job !!!!!!!!!!!!!!!!!!!!!&quot;</span><span class="p">);</span>
</span><span class='line'>          <span class="k">this</span><span class="p">.</span><span class="nx">schedule</span><span class="p">(</span><span class="nx">job</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">this</span><span class="p">.</span><span class="nx">_logger</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s2">&quot;already new job in the queue !!!!!!!!!!!!&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[case statement in ruby]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2012/10/23/case-statement-in-ruby/"/>
    <updated>2012-10-23T10:40:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2012/10/23/case-statement-in-ruby</id>
    <content type="html"><![CDATA[<p>Ruby case &hellip; when statement use the === operator internally.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'><span class="k">case</span> <span class="n">obj</span><span class="o">.</span><span class="n">class</span>
</span><span class='line'><span class="k">when</span> <span class="nb">String</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is a string&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">when</span> <span class="no">Fixnum</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is a number&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is not a string&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="s1">&#39;hello&#39;</span>
</span><span class='line'><span class="k">case</span> <span class="n">obj</span>  <span class="c1"># was case obj.class</span>
</span><span class='line'><span class="k">when</span> <span class="nb">String</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is a string&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">when</span> <span class="no">Fixnum</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is a number&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;It is not a string&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>Without parameter</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">case</span>
</span><span class='line'><span class="k">when</span> <span class="n">b</span> <span class="o">&lt;</span> <span class="mi">3</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Little than 3&quot;</span>
</span><span class='line'><span class="k">when</span> <span class="n">b</span> <span class="o">==</span> <span class="mi">3</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Equal to 3&quot;</span>
</span><span class='line'><span class="k">when</span> <span class="n">b</span> <span class="o">===</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;Something in closed range of [1..10]&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[when rake new_post command does not work in zsh]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2012/10/22/when-rake-new-post-command-does-not-work-in-zsh/"/>
    <updated>2012-10-22T10:15:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2012/10/22/when-rake-new-post-command-does-not-work-in-zsh</id>
    <content type="html"><![CDATA[<p>To work around the problem, use below command</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="se">\[</span><span class="s2">&quot;My new post&quot;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Another way to avoid the problem is to add next configuration in your .zshrc</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">alias </span><span class="nv">rake</span><span class="o">=</span><span class="s1">&#39;noglob rake&#39;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[how to use octopress as to posting and deploying to heroku]]></title>
    <link href="http://ygpark2.cloudfoundry.com/blog/2012/10/22/how-to-use-otopress-as-to-posting-and-deploying-to-heroku/"/>
    <updated>2012-10-22T10:14:00+10:00</updated>
    <id>http://ygpark2.cloudfoundry.com/blog/2012/10/22/how-to-use-otopress-as-to-posting-and-deploying-to-heroku</id>
    <content type="html"><![CDATA[<p>When a repo is cloned, it has a default remote called &ldquo;origin&rdquo; pointing to your forked repo on GitHub.
To keep track of the original repo, you need to add another remote repo named &ldquo;upstream&rdquo;</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git remote add upstream https://github.com/<span class="o">(</span>username<span class="o">)</span>/repository_name.git
</span><span class='line'>git fetch upstream
</span><span class='line'>git merge upstream/master
</span></code></pre></td></tr></table></div></figure>


<p>Those above command will allow you to synchronize the original octopress code.</p>

<p>Now, it&rsquo;s time to post a new writing on octopress</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;title_here&quot;</span><span class="o">]</span>
</span><span class='line'><span class="c"># if you are using zsh, otherwise you will see this error message &quot;zsh: no matches found: new_post[&quot;title_here&quot;]&quot;</span>
</span><span class='line'>rake new_post<span class="se">\[</span><span class="s2">&quot;title_here&quot;</span><span class="se">\]</span>
</span></code></pre></td></tr></table></div></figure>


<p>This command will set the default repository to be effected by push and fetch command.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Set heroku to be the default remote for push/fetch</span>
</span><span class='line'>git config branch.master.remote heroku
</span></code></pre></td></tr></table></div></figure>


<p>The below commands will commit the modified codes and push to heroku repository so that heroku can recognize your posting.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate
</span><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;commit message&#39;</span>
</span><span class='line'>git push heroku master
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
